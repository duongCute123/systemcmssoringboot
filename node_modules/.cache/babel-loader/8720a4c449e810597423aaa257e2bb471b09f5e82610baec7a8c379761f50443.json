{"ast":null,"code":"var _jsxFileName = \"D:\\\\ThucTap\\\\system_cms\\\\src\\\\context\\\\AuthenContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthenContext = /*#__PURE__*/createContext();\nconst initialState = {\n  MovieTimKiem: [],\n  MovieCategory: []\n};\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'SEARCH_SUCCESS':\n      console.log(action.payload);\n      return {\n        ...state,\n        MovieTimKiem: action.payload\n      };\n      break;\n    case 'GET_CATEGORY_MOVIE':\n      return {\n        ...state,\n        MovieCategory: action.payload\n      };\n      break;\n    default:\n      throw \"Invalid reques\";\n      break;\n  }\n};\nconst AuthenProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const fetchSearch = async query => {\n    console.log(query);\n    await axios.get(`/_next/data/s4OlXy8jONoHVWAT5vg7b/tim-kiem.json?keyword=` + encodeURIComponent(query)).then(res => {\n      const data = res.data.pageProps.data;\n      console.log(data);\n      console.log(res.data.pageProps.data.items);\n      dispatch({\n        type: 'SEARCH_SUCCESS',\n        payload: data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const fetchCategory = async () => {\n    await axios.get(`/_next/data/s4OlXy8jONoHVWAT5vg7b/tim-kiem.json?keyword=`).then(res => {\n      const data = res.data.pageProps.data;\n      console.log(data);\n      console.log(res.data.pageProps.data.items);\n      dispatch({\n        type: 'SEARCH_SUCCESS',\n        payload: data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n  const list = {\n    username: \"\",\n    password: \"\",\n    email: \"\"\n  };\n  // Khi người dùng đăng nhập thì set User cho nó\n  const [auth, setAuth] = useState({});\n  const [Film, setFilm] = useState([]);\n  const [infoMovie, setInfoMovie] = useState([]);\n  const [MovieId, setMovieId] = useState(\"\");\n  // Lấy thông tin role khi người dùng đăng nhập\n  const [role, setRole] = useState([]);\n  const [forms, setForms] = useState(list);\n  const laygtri = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setForms({\n      ...forms,\n      [name]: value\n    });\n  };\n  const {\n    username,\n    password,\n    email\n  } = forms;\n  const value = {\n    username,\n    password,\n    email,\n    forms,\n    role,\n    setRole,\n    laygtri,\n    auth,\n    setAuth,\n    MovieId,\n    setMovieId,\n    Film,\n    setFilm,\n    infoMovie,\n    setInfoMovie,\n    state,\n    fetchSearch\n  };\n  return /*#__PURE__*/_jsxDEV(AuthenContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthenProvider, \"TGr4jznT3UntBx8+MANmRAXniHM=\");\n_c = AuthenProvider;\nexport { AuthenContext, AuthenProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthenProvider\");","map":{"version":3,"names":["createContext","useReducer","useState","axios","jsxDEV","_jsxDEV","AuthenContext","initialState","MovieTimKiem","MovieCategory","reducer","state","action","type","console","log","payload","AuthenProvider","children","_s","dispatch","fetchSearch","query","get","encodeURIComponent","then","res","data","pageProps","items","catch","err","fetchCategory","list","username","password","email","auth","setAuth","Film","setFilm","infoMovie","setInfoMovie","MovieId","setMovieId","role","setRole","forms","setForms","laygtri","e","name","value","target","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/ThucTap/system_cms/src/context/AuthenContext.jsx"],"sourcesContent":["import { createContext, useReducer } from \"react\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\"\r\nconst AuthenContext = createContext();\r\nconst initialState = {\r\n    MovieTimKiem: [],\r\n    MovieCategory: []\r\n}\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SEARCH_SUCCESS':\r\n            console.log(action.payload);\r\n            return {\r\n                ...state, MovieTimKiem: action.payload\r\n            }\r\n            break;\r\n        case 'GET_CATEGORY_MOVIE':\r\n            return {\r\n                ...state, MovieCategory: action.payload\r\n            }\r\n            break\r\n        default:\r\n            throw (\"Invalid reques\")\r\n            break;\r\n    }\r\n}\r\nconst AuthenProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    const fetchSearch = async (query) => {\r\n        console.log(query);\r\n        await axios.get(`/_next/data/s4OlXy8jONoHVWAT5vg7b/tim-kiem.json?keyword=` + encodeURIComponent(query))\r\n            .then(res => {\r\n                const data = res.data.pageProps.data\r\n                console.log(data);\r\n                console.log(res.data.pageProps.data.items);\r\n                dispatch({ type: 'SEARCH_SUCCESS', payload: data })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    const  fetchCategory= async () => {\r\n        await axios.get(`/_next/data/s4OlXy8jONoHVWAT5vg7b/tim-kiem.json?keyword=`)\r\n            .then(res => {\r\n                const data = res.data.pageProps.data\r\n                console.log(data);\r\n                console.log(res.data.pageProps.data.items);\r\n                dispatch({ type: 'SEARCH_SUCCESS', payload: data })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    const list = {\r\n        username: \"\",\r\n        password: \"\",\r\n        email: \"\"\r\n    }\r\n    // Khi người dùng đăng nhập thì set User cho nó\r\n    const [auth, setAuth] = useState({})\r\n    const [Film, setFilm] = useState([])\r\n    const [infoMovie, setInfoMovie] = useState([])\r\n    const [MovieId, setMovieId] = useState(\"\")\r\n    // Lấy thông tin role khi người dùng đăng nhập\r\n    const [role, setRole] = useState([])\r\n    const [forms, setForms] = useState(list)\r\n    const laygtri = (e) => {\r\n        const { name, value } = e.target\r\n        setForms({ ...forms, [name]: value })\r\n    }\r\n    const { username, password, email } = forms\r\n    const value = {\r\n        username,\r\n        password,\r\n        email,\r\n        forms,\r\n        role,\r\n        setRole,\r\n        laygtri,\r\n        auth,\r\n        setAuth,\r\n        MovieId,\r\n        setMovieId,\r\n        Film,\r\n        setFilm,\r\n        infoMovie,\r\n        setInfoMovie,\r\n        state,\r\n        fetchSearch\r\n\r\n    }\r\n    return (\r\n        <AuthenContext.Provider value={value}>\r\n            {children}\r\n        </AuthenContext.Provider>\r\n    )\r\n}\r\nexport { AuthenContext, AuthenProvider }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}